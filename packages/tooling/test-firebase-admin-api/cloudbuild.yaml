substitutions:
  _KUBE_NAME: shared
  _KUBE_ZONE: europe-west2
  _KUBE_NAMESPACE: react-native-firebase
  _DEPLOYMENT_NAME: api-react-native-firebase
  _ROOT_DIR: packages/tooling/test-firebase-admin-api
steps:
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker pull gcr.io/$PROJECT_ID/${_DEPLOYMENT_NAME}:prod-latest || exit 0

  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd ${_ROOT_DIR}
        gcloud container clusters get-credentials --zone "${_KUBE_ZONE}" "${_KUBE_NAME}"
        gcloud debug source gen-repo-info-file

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--build-arg', 'PROJECT_ID=$PROJECT_ID',
      '--cache-from', 'gcr.io/$PROJECT_ID/${_DEPLOYMENT_NAME}:latest',
      '-t', 'gcr.io/$PROJECT_ID/${_DEPLOYMENT_NAME}:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/${_DEPLOYMENT_NAME}:prod-latest',
      '${_ROOT_DIR}'
    ]

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_DEPLOYMENT_NAME}:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd ${_ROOT_DIR}
        gcloud container clusters get-credentials --zone "${_KUBE_ZONE}" "${_KUBE_NAME}"

        if kubectl get namespaces ${_KUBE_NAMESPACE}; then
        echo Namespace found '${_KUBE_NAMESPACE}'
        else
        echo Creating a new namespace called '${_KUBE_NAMESPACE}'
        cat <<EOF | kubectl create -f -
        apiVersion: v1
        kind: Namespace
        metadata:
          name: ${_KUBE_NAMESPACE}
        EOF
        fi

        # Create if does not exist, or replace if exists.
        if kubectl --namespace=${_KUBE_NAMESPACE} get services ${_DEPLOYMENT_NAME}; then
          echo Patching existing deplyoment.
          kubectl --namespace=${_KUBE_NAMESPACE} set image deployment.v1.apps/${_DEPLOYMENT_NAME} ${_DEPLOYMENT_NAME}=gcr.io/$PROJECT_ID/${_DEPLOYMENT_NAME}:$COMMIT_SHA || exit 1
        else
          echo Creating a new deplyoment.
          sed -i s|gcr.io/project/example:.*|gcr.io/$PROJECT_ID/${_DEPLOYMENT_NAME}:$COMMIT_SHA|g deployment.yaml
          kubectl create -f deployment.yaml || exit 1
        fi

images:
  - 'gcr.io/$PROJECT_ID/${_DEPLOYMENT_NAME}:latest'
